{
	"info": {
		"_postman_id": "6550ae73-a4bd-424a-9b61-5c9d108df093",
		"name": "Integration Testing Threads/Posts",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "Test Log in",
			"item": [
				{
					"name": "login teacher",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = pm.response.json();\r",
									"\r",
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Correct username\", function () {\r",
									"    pm.expect(jsonData.username).to.eql(\"teacher1\");\r",
									"});\r",
									"\r",
									"pm.globals.set(\"token-teacher1\", jsonData.token);\r",
									"pm.globals.set(\"teacher1\", jsonData.username);\r",
									"\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"email\":\"teacher1@abc.nl\",\r\n    \"password\": \"teacher1\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "localhost:8083/user/login",
							"host": [
								"localhost"
							],
							"port": "8083",
							"path": [
								"user",
								"login"
							]
						}
					},
					"response": []
				},
				{
					"name": "login student",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = pm.response.json();\r",
									"\r",
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Correct username\", function () {\r",
									"    pm.expect(jsonData.username).to.eql(\"student1\");\r",
									"});\r",
									"\r",
									"pm.globals.set(\"token-student1\", jsonData.token);\r",
									"pm.globals.set(\"student1\", jsonData.username);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"email\":\"student1@abc.nl\",\r\n    \"password\": \"student1\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "localhost:8083/user/login",
							"host": [
								"localhost"
							],
							"port": "8083",
							"path": [
								"user",
								"login"
							]
						}
					},
					"response": []
				},
				{
					"name": "login teacher2",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = pm.response.json();\r",
									"\r",
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Correct username\", function () {\r",
									"    pm.expect(jsonData.username).to.eql(\"teacher2\");\r",
									"});\r",
									"\r",
									"pm.globals.set(\"token-teacher2\", jsonData.token);\r",
									"pm.globals.set(\"teacher2\", jsonData.username);\r",
									"\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"email\":\"teacher2@abc.nl\",\r\n    \"password\": \"teacher2\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "localhost:8083/user/login",
							"host": [
								"localhost"
							],
							"port": "8083",
							"path": [
								"user",
								"login"
							]
						}
					},
					"response": []
				}
			],
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			]
		},
		{
			"name": "Test Teacher Board",
			"item": [
				{
					"name": "create board",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"A board was created\", function () {\r",
									"    pm.response.to.have.status(201);\r",
									"});\r",
									"\r",
									"pm.globals.set(\"boardId\", pm.response.text().split(\" \")[5])"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"//Every time this creates new name for the board\r",
									"var random = Math.random().toString(36).substring(2);\r",
									"var boardName = \"Board-\" + random;\r",
									"pm.globals.set(\"boardName\", boardName);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "value",
									"value": "{{token-teacher1}}",
									"type": "string"
								},
								{
									"key": "key",
									"value": "user-token",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"name\":\"{{boardName}}\",\r\n    \"description\":\"description of a board\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "localhost:8082/board/create",
							"host": [
								"localhost"
							],
							"port": "8082",
							"path": [
								"board",
								"create"
							]
						}
					},
					"response": []
				},
				{
					"name": "lock board",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Teacher1 locked the board\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"The board was successfully updated.\");\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "value",
									"value": "{{token-teacher1}}",
									"type": "string"
								},
								{
									"key": "key",
									"value": "user-token",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"id\":\"{{boardId}}\",\r\n    \"name\":\"{{boardName}}\",\r\n    \"description\":\"New description of a board\",\r\n    \"locked\": \"true\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "localhost:8082/board/edit/",
							"host": [
								"localhost"
							],
							"port": "8082",
							"path": [
								"board",
								"edit",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "update board after it is locked",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Teacher1 locked the board\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"The board was successfully updated.\");\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "value",
									"value": "{{token-teacher1}}",
									"type": "string"
								},
								{
									"key": "key",
									"value": "user-token",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"id\":\"{{boardId}}\",\r\n    \"name\":\"{{boardName}}\",\r\n    \"description\":\"New new description\",\r\n    \"locked\": \"true\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "localhost:8082/board/edit/",
							"host": [
								"localhost"
							],
							"port": "8082",
							"path": [
								"board",
								"edit",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "check the board was edited",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"The board was successfully edited\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.decription == \"New new description\");\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "value",
									"value": "{{token-teacher1}}",
									"type": "string"
								},
								{
									"key": "key",
									"value": "token",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "localhost:8082/board/get/{{boardId}}",
							"host": [
								"localhost"
							],
							"port": "8082",
							"path": [
								"board",
								"get",
								"{{boardId}}"
							]
						}
					},
					"response": []
				}
			],
			"description": "Teacher logs in.\r\nTeacher creates a board.\r\nTeacher gets the created board.",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			]
		},
		{
			"name": "Test Teacher Thread",
			"item": [
				{
					"name": "create thread fail",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"A thread wasnt created. No such board in DB\", function () {\r",
									"    pm.response.to.have.status(400);\r",
									"    pm.expect(pm.response.text()).to.include(\"Given board could not be found\");\r",
									"});\r",
									"\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "key",
									"value": "token",
									"type": "string"
								},
								{
									"key": "value",
									"value": "{{token-teacher1}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"title\":\"Thread 13\",\r\n    \"statement\":\"description of a thread\",\r\n    \"boardId\": \"10000\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "localhost:8081/thread/create",
							"host": [
								"localhost"
							],
							"port": "8081",
							"path": [
								"thread",
								"create"
							]
						}
					},
					"response": []
				},
				{
					"name": "create thread fail 2",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"A thread wasnt created. The board is locked\", function () {\r",
									"    pm.response.to.have.status(400);\r",
									"    pm.expect(pm.response.text()).to.include(\"Given board is locked and new items can't be added\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "key",
									"value": "token",
									"type": "string"
								},
								{
									"key": "value",
									"value": "{{token-teacher1}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"title\":\"Thread 13\",\r\n    \"statement\":\"description of a thread\",\r\n    \"boardId\": \"{{boardId}}\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "localhost:8081/thread/create",
							"host": [
								"localhost"
							],
							"port": "8081",
							"path": [
								"thread",
								"create"
							]
						}
					},
					"response": []
				},
				{
					"name": "unlock board",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Teacher1 unlocked the board\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"The board was successfully updated.\");\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "value",
									"value": "{{token-teacher1}}",
									"type": "string"
								},
								{
									"key": "key",
									"value": "user-token",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"id\":\"{{boardId}}\",\r\n    \"name\":\"{{boardName}}\",\r\n    \"description\":\"new description of a board\",\r\n    \"locked\": \"false\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "localhost:8082/board/edit/",
							"host": [
								"localhost"
							],
							"port": "8082",
							"path": [
								"board",
								"edit",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "create thread succsess",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"//Every time this creates new name for the thread\r",
									"var random = Math.random().toString(36).substring(2);\r",
									"var threadName = \"Thread-\" + random;\r",
									"pm.globals.set(\"threadName\", threadName);"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"A thread was created\", function () {\r",
									"    pm.response.to.have.status(201);\r",
									"});\r",
									"\r",
									"pm.globals.set(\"threadId\", pm.response.text().split(\" \")[5])"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "key",
									"value": "token",
									"type": "string"
								},
								{
									"key": "value",
									"value": "{{token-teacher1}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"title\":\"{{threadName}}\",\r\n    \"statement\":\"description of a thread\",\r\n    \"boardId\": \"{{boardId}}\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "localhost:8081/thread/create",
							"host": [
								"localhost"
							],
							"port": "8081",
							"path": [
								"thread",
								"create"
							]
						}
					},
					"response": []
				},
				{
					"name": "lock thread",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"    pm.expect(pm.response.text()).to.include(\"has been locked\");\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "key",
									"value": "token",
									"type": "string"
								},
								{
									"key": "value",
									"value": "{{token-teacher1}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "localhost:8081/thread/lock/{{threadId}}",
							"host": [
								"localhost"
							],
							"port": "8081",
							"path": [
								"thread",
								"lock",
								"{{threadId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "unlock unauth user fail",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"A thread wasnt unlocked. Unauth user cant unlock threads\", function () {\r",
									"    pm.response.to.have.status(401);\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "value",
									"value": "null",
									"type": "string"
								},
								{
									"key": "key",
									"value": "token",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"url": {
							"raw": "localhost:8081/thread/unlock/{{threadId}}",
							"host": [
								"localhost"
							],
							"port": "8081",
							"path": [
								"thread",
								"unlock",
								"{{threadId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "edit thread",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"A thred was successfully edited\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"has been updated\");\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "value",
									"value": "{{token-teacher1}}",
									"type": "string"
								},
								{
									"key": "key",
									"value": "token",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"title\":\"{{threadName}}\",\r\n    \"statement\":\"New description of a thread\",\r\n    \"boardId\":\"{{boardId}}\",\r\n    \"isLocked\":\"false\",\r\n    \"boardThreadId\":\"{{threadId}}\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "localhost:8081/thread/edit",
							"host": [
								"localhost"
							],
							"port": "8081",
							"path": [
								"thread",
								"edit"
							]
						}
					},
					"response": []
				},
				{
					"name": "check the thread was edited",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"The thread was successfully edited\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.statement).to.eql(\"New description of a thread\");\r",
									"    pm.expect(jsonData.isLocked == true); // this wasnt chnged as you cant lock/unlock through edit\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "value",
									"value": "{{token-teacher1}}",
									"type": "string"
								},
								{
									"key": "key",
									"value": "token",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "localhost:8081/thread/get/{{threadId}}",
							"host": [
								"localhost"
							],
							"port": "8081",
							"path": [
								"thread",
								"get",
								"{{threadId}}"
							]
						}
					},
					"response": []
				}
			],
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			]
		},
		{
			"name": "Test Teacher Post",
			"item": [
				{
					"name": "create post fail",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"A post wasnt created. No such thread in DB\", function () {\r",
									"    pm.response.to.have.status(400);\r",
									"    pm.expect(pm.response.text()).to.include(\"Given thread could not be found\");\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "key",
									"value": "token",
									"type": "string"
								},
								{
									"key": "value",
									"value": "{{token-teacher1}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"body\":\"This is post 13\",\r\n    \"boardThreadId\":\"10000\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "localhost:8081/post/create",
							"host": [
								"localhost"
							],
							"port": "8081",
							"path": [
								"post",
								"create"
							]
						}
					},
					"response": []
				},
				{
					"name": "create post fail 2",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"A post wasnt created. The thread is locked\", function () {\r",
									"    pm.response.to.have.status(400);\r",
									"    pm.expect(pm.response.text()).to.include(\"Given thread is locked and new items can't be added\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "key",
									"value": "token",
									"type": "string"
								},
								{
									"key": "value",
									"value": "{{token-teacher1}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"body\":\"This is post 13\",\r\n    \"boardThreadId\":\"{{threadId}}\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "localhost:8081/post/create",
							"host": [
								"localhost"
							],
							"port": "8081",
							"path": [
								"post",
								"create"
							]
						}
					},
					"response": []
				},
				{
					"name": "unlock thread",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"    pm.expect(pm.response.text()).to.include(\"has been unlocked\");\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "key",
									"value": "token",
									"type": "string"
								},
								{
									"key": "value",
									"value": "{{token-teacher1}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "localhost:8081/thread/unlock/{{threadId}}",
							"host": [
								"localhost"
							],
							"port": "8081",
							"path": [
								"thread",
								"unlock",
								"{{threadId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "create post succsess",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"A post was created\", function () {\r",
									"    pm.response.to.have.status(201);\r",
									"});\r",
									"\r",
									"pm.globals.set(\"postId\", pm.response.text().split(\" \")[5])\r",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"//Every time this creates new post\r",
									"var random = Math.random().toString(36).substring(2);\r",
									"var postBody = \"Post-\" + random;\r",
									"pm.globals.set(\"postBody\", postBody);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "key",
									"value": "token",
									"type": "string"
								},
								{
									"key": "value",
									"value": "{{token-teacher1}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"body\":\"{{postBody}}\",\r\n    \"boardThreadId\":\"{{threadId}}\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "localhost:8081/post/create",
							"host": [
								"localhost"
							],
							"port": "8081",
							"path": [
								"post",
								"create"
							]
						}
					},
					"response": []
				},
				{
					"name": "lock board",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Teacher1 locked the board\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"The board was successfully updated.\");\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "value",
									"value": "{{token-teacher1}}",
									"type": "string"
								},
								{
									"key": "key",
									"value": "user-token",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"id\":\"{{boardId}}\",\r\n    \"name\":\"{{boardName}}\",\r\n    \"description\":\"New description of a board\",\r\n    \"locked\": \"true\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "localhost:8082/board/edit/",
							"host": [
								"localhost"
							],
							"port": "8082",
							"path": [
								"board",
								"edit",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "edit post succsess",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"The post was edited\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "value",
									"value": "{{token-teacher1}}",
									"type": "string"
								},
								{
									"key": "key",
									"value": "token",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"body\":\"New body\",\r\n    \"boardThreadId\":\"{{threadId}}\",\r\n    \"postId\":\"{{postId}}\"\r\n        \r\n}\r\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "localhost:8081/post/edit",
							"host": [
								"localhost"
							],
							"port": "8081",
							"path": [
								"post",
								"edit"
							]
						}
					},
					"response": []
				},
				{
					"name": "check edit was succsessful",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"The post was edited correctly\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.body == \"New body\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "value",
									"value": "{{token-teacher1}}",
									"type": "string"
								},
								{
									"key": "key",
									"value": "token",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "localhost:8081/post/get/{{postId}}",
							"host": [
								"localhost"
							],
							"port": "8081",
							"path": [
								"post",
								"get",
								"{{postId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "create new post fail",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Could not create a post as the board is locked\", function () {\r",
									"    pm.response.to.have.status(400);\r",
									"});"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "key",
									"value": "token",
									"type": "string"
								},
								{
									"key": "value",
									"value": "{{token-teacher1}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"body\":\"This is a new post\",\r\n    \"boardThreadId\":\"{{threadId}}\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "localhost:8081/post/create",
							"host": [
								"localhost"
							],
							"port": "8081",
							"path": [
								"post",
								"create"
							]
						}
					},
					"response": []
				},
				{
					"name": "unlock board",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Teacher1 unlocked the board\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"The board was successfully updated.\");\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "value",
									"value": "{{token-teacher1}}",
									"type": "string"
								},
								{
									"key": "key",
									"value": "user-token",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"id\":\"{{boardId}}\",\r\n    \"name\":\"{{boardName}}\",\r\n    \"description\":\"new description of a board\",\r\n    \"locked\": \"false\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "localhost:8082/board/edit/",
							"host": [
								"localhost"
							],
							"port": "8082",
							"path": [
								"board",
								"edit",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "create new post succsess",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"A post was created\", function () {\r",
									"    pm.response.to.have.status(201);\r",
									"});\r",
									"\r",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "key",
									"value": "token",
									"type": "string"
								},
								{
									"key": "value",
									"value": "{{token-teacher1}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"body\":\"This is a new Post\",\r\n    \"boardThreadId\":\"{{threadId}}\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "localhost:8081/post/create",
							"host": [
								"localhost"
							],
							"port": "8081",
							"path": [
								"post",
								"create"
							]
						}
					},
					"response": []
				}
			],
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			]
		},
		{
			"name": "Test Unauthorized user Board",
			"item": [
				{
					"name": "create a board fail",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"The board wasn't created. Unauthorized users cant create boards\", function () {\r",
									"    if(pm.response.status!=404){\r",
									"         setTimeout(() => {}, 2000);\r",
									"    }\r",
									"    pm.response.to.have.status(404);\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "value",
									"value": "null",
									"type": "string"
								},
								{
									"key": "key",
									"value": "user-token",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"name\":\"User's Board\",\r\n    \"description\":\"board of a user\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "localhost:8082/board/create",
							"host": [
								"localhost"
							],
							"port": "8082",
							"path": [
								"board",
								"create"
							]
						}
					},
					"response": []
				},
				{
					"name": "edit board user fail",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"The board cant be edited\", function () {\r",
									"    if(pm.response.status!=404){\r",
									"         setTimeout(() => {}, 2000);\r",
									"    }\r",
									"    pm.response.to.have.status(404);\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "value",
									"value": "null",
									"type": "string"
								},
								{
									"key": "key",
									"value": "user-token",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"id\":\"{{boardId}}\",\r\n    \"name\":\"{{boardName}}\",\r\n    \"description\":\"description of a board by user\",\r\n    \"locked\": \"false\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "localhost:8082/board/edit/",
							"host": [
								"localhost"
							],
							"port": "8082",
							"path": [
								"board",
								"edit",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "get all boards",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Boards retrieved succsessfully\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "localhost:8082/board/get/",
							"host": [
								"localhost"
							],
							"port": "8082",
							"path": [
								"board",
								"get",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "get board",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Correct board was retrieved\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.name).to.eql(pm.globals.get(\"boardName\"));\r",
									"});\r",
									"\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "localhost:8082/board/get/{{boardId}}",
							"host": [
								"localhost"
							],
							"port": "8082",
							"path": [
								"board",
								"get",
								"{{boardId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "get board not in db",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"The board is not in the database\", function () {\r",
									"    pm.response.to.have.status(400);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "localhost:8082/board/get/10000",
							"host": [
								"localhost"
							],
							"port": "8082",
							"path": [
								"board",
								"get",
								"10000"
							]
						}
					},
					"response": []
				}
			],
			"description": "Unauthorized user tries to create a board and fails.\r\nUnauthorized user tries to edit a board and fails.\r\nUser gets all the boards.\r\nUser gets a board by id.\r\nUser tries to get a board that is not in the database.",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			]
		},
		{
			"name": "Test Teacher adds more threads to Board",
			"item": [
				{
					"name": "create thread",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"//Every time this creates new name for the thread\r",
									"var random = Math.random().toString(36).substring(2);\r",
									"var threadName2 = \"Thread-\" + random;\r",
									"pm.globals.set(\"threadName2\", threadName2);"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"A thread was created\", function () {\r",
									"    pm.response.to.have.status(201);\r",
									"});\r",
									"\r",
									"pm.globals.set(\"threadId2\", pm.response.text().split(\" \")[5])"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "key",
									"value": "token",
									"type": "string"
								},
								{
									"key": "value",
									"value": "{{token-teacher1}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"title\":\"{{threadName2}}\",\r\n    \"statement\":\"description of a thread\",\r\n    \"boardId\": \"{{boardId}}\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "localhost:8081/thread/create",
							"host": [
								"localhost"
							],
							"port": "8081",
							"path": [
								"thread",
								"create"
							]
						}
					},
					"response": []
				},
				{
					"name": "create thread2",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"//Every time this creates new name for the thread\r",
									"var random = Math.random().toString(36).substring(2);\r",
									"var threadName3 = \"Thread-\" + random;\r",
									"pm.globals.set(\"threadName3\", threadName3);"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"A thread was created\", function () {\r",
									"    pm.response.to.have.status(201);\r",
									"});\r",
									"\r",
									"pm.globals.set(\"threadId3\", pm.response.text().split(\" \")[5])"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "key",
									"value": "token",
									"type": "string"
								},
								{
									"key": "value",
									"value": "{{token-teacher1}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"title\":\"{{threadName3}}\",\r\n    \"statement\":\"description of a thread\",\r\n    \"boardId\": \"{{boardId}}\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "localhost:8081/thread/create",
							"host": [
								"localhost"
							],
							"port": "8081",
							"path": [
								"thread",
								"create"
							]
						}
					},
					"response": []
				}
			],
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			]
		},
		{
			"name": "Test UnauthorizedUser Thread",
			"item": [
				{
					"name": "create thread fail",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"A thread wasnt created. Unauth user cant create threads\", function () {\r",
									"    pm.response.to.have.status(401);\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "value",
									"value": "null",
									"type": "string"
								},
								{
									"key": "key",
									"value": "token",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"title\":\"User's Thread\",\r\n    \"statement\":\"description of a User's thread\",\r\n    \"boardId\": \"{{boardId}}\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "localhost:8081/thread/create",
							"host": [
								"localhost"
							],
							"port": "8081",
							"path": [
								"thread",
								"create"
							]
						}
					},
					"response": []
				},
				{
					"name": "lock thread fail ",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"A thread wasnt locked. Unauth user cant lock threads\", function () {\r",
									"    pm.response.to.have.status(401);\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "value",
									"value": "null",
									"type": "string"
								},
								{
									"key": "key",
									"value": "token",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "localhost:8081/thread/lock/{{threadId}}",
							"host": [
								"localhost"
							],
							"port": "8081",
							"path": [
								"thread",
								"lock",
								"{{threadId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "edit thread fail",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"A thread wasnt edited. Unauth user cant edit threads\", function () {\r",
									"    pm.response.to.have.status(401);\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "value",
									"value": "null",
									"type": "string"
								},
								{
									"key": "key",
									"value": "token",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"title\":\"{{threadName}}\",\r\n    \"statement\":\"New description of a thread by User\",\r\n    \"boardId\":\"{{boardId}}\",\r\n    \"isLocked\":\"false\",\r\n    \"boardThreadId\":\"{{threadId}}\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "localhost:8081/thread/edit",
							"host": [
								"localhost"
							],
							"port": "8081",
							"path": [
								"thread",
								"edit"
							]
						}
					},
					"response": []
				},
				{
					"name": "get all threads",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Threads retrieved succsessfully\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "value",
									"value": "null",
									"type": "string"
								},
								{
									"key": "key",
									"value": "token",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "localhost:8081/thread/get",
							"host": [
								"localhost"
							],
							"port": "8081",
							"path": [
								"thread",
								"get"
							]
						}
					},
					"response": []
				},
				{
					"name": "get thread",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Correct thread was retrieved\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.name == pm.globals.get(\"threadName\"));\r",
									"});\r",
									"\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "value",
									"value": "null",
									"type": "string"
								},
								{
									"key": "key",
									"value": "token",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "localhost:8081/thread/get/{{threadId}}",
							"host": [
								"localhost"
							],
							"port": "8081",
							"path": [
								"thread",
								"get",
								"{{threadId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "get thread not in db",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"The thread is not in the database\", function () {\r",
									"    pm.response.to.have.status(400);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "value",
									"value": "null",
									"type": "string"
								},
								{
									"key": "key",
									"value": "token",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "localhost:8081/thread/get/10000",
							"host": [
								"localhost"
							],
							"port": "8081",
							"path": [
								"thread",
								"get",
								"10000"
							]
						}
					},
					"response": []
				},
				{
					"name": "get threads for a board",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Threads were retrieved succsessfully\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "localhost:8081/thread/get/allthreads/{{boardId}}",
							"host": [
								"localhost"
							],
							"port": "8081",
							"path": [
								"thread",
								"get",
								"allthreads",
								"{{boardId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "get threads for a board fail",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"There is no such board in DB\", function () {\r",
									"    pm.response.to.have.status(400);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "localhost:8081/thread/get/allthreads/10000",
							"host": [
								"localhost"
							],
							"port": "8081",
							"path": [
								"thread",
								"get",
								"allthreads",
								"10000"
							]
						}
					},
					"response": []
				}
			],
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			]
		},
		{
			"name": "Test UnauthorizedUser Post",
			"item": [
				{
					"name": "create post fail",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"A post wasnt created. Unauth user cant create posts\", function () {\r",
									"    pm.response.to.have.status(401);\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "value",
									"value": "null",
									"type": "string"
								},
								{
									"key": "key",
									"value": "token",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"body\":\"This is a new post by User\",\r\n    \"boardThreadId\":\"{{threadId}}\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "localhost:8081/post/create",
							"host": [
								"localhost"
							],
							"port": "8081",
							"path": [
								"post",
								"create"
							]
						}
					},
					"response": []
				},
				{
					"name": "edit post fail",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"A post wasnt edited. Unauth user cant edit posts\", function () {\r",
									"    pm.response.to.have.status(401);\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "value",
									"value": "null",
									"type": "string"
								},
								{
									"key": "key",
									"value": "token",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"postId\":\"{{postId}}\",\r\n    \"boardThreadId\":\"{{boardId}}\",\r\n    \"body\":\"New body\"\r\n}\r\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "localhost:8081/post/edit",
							"host": [
								"localhost"
							],
							"port": "8081",
							"path": [
								"post",
								"edit"
							]
						}
					},
					"response": []
				},
				{
					"name": "get post",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Correct post was retrieved\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.body == \"postBody\");\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "value",
									"value": "null",
									"type": "string"
								},
								{
									"key": "key",
									"value": "token",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "localhost:8081/post/get/{{postId}}",
							"host": [
								"localhost"
							],
							"port": "8081",
							"path": [
								"post",
								"get",
								"{{postId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "get all posts",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"All posts were retrieved\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "value",
									"value": "null",
									"type": "string"
								},
								{
									"key": "key",
									"value": "token",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "localhost:8081/post/get",
							"host": [
								"localhost"
							],
							"port": "8081",
							"path": [
								"post",
								"get"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Test Student Board",
			"item": [
				{
					"name": "create board fail",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"The board wasn't created. Students cant create boards\", function () {\r",
									"    if(pm.response.status!=401){\r",
									"         setTimeout(() => {}, 2000);\r",
									"    }\r",
									"    pm.response.to.have.status(401);\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "value",
									"value": "{{token-student1}}",
									"type": "string"
								},
								{
									"key": "key",
									"value": "user-token",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"name\":\"Student Board\",\r\n    \"description\":\"board of a student\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "localhost:8082/board/create",
							"host": [
								"localhost"
							],
							"port": "8082",
							"path": [
								"board",
								"create"
							]
						}
					},
					"response": []
				},
				{
					"name": "edit board fail",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"The board cant be edited\", function () {\r",
									"    if(pm.response.status!=401){\r",
									"         setTimeout(() => {}, 2000);\r",
									"    }\r",
									"    pm.response.to.have.status(401);\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "value",
									"value": "{{token-student1}}",
									"type": "string"
								},
								{
									"key": "key",
									"value": "user-token",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"id\":\"{{boardId}}\",\r\n    \"name\":\"{{boardName}}\",\r\n    \"description\":\"description of a board by student1\",\r\n    \"locked\": \"false\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "localhost:8082/board/edit/",
							"host": [
								"localhost"
							],
							"port": "8082",
							"path": [
								"board",
								"edit",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "get all boards",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Boards retrieved succsessfully\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "value",
									"value": "token-student1",
									"type": "string"
								},
								{
									"key": "key",
									"value": "user-token",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "localhost:8082/board/get/",
							"host": [
								"localhost"
							],
							"port": "8082",
							"path": [
								"board",
								"get",
								""
							]
						}
					},
					"response": []
				}
			],
			"description": "Student logs in.\r\nStudent tries to create a board and fails.\r\nStudent tried to edit a board (created by Teacher 1) and fails.\r\nStudent gets all the boards.",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			]
		},
		{
			"name": "Test Student Thread",
			"item": [
				{
					"name": "create thread succsess",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"//Every time this creates new name for the thread\r",
									"var random = Math.random().toString(36).substring(2);\r",
									"var threadNameS = \"StudentThread-\" + random;\r",
									"pm.globals.set(\"threadNameS\", threadNameS);"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"A thread was created\", function () {\r",
									"    pm.response.to.have.status(201);\r",
									"});\r",
									"\r",
									"pm.globals.set(\"threadIdStudent\", pm.response.text().split(\" \")[5])"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "value",
									"value": "{{token-student1}}",
									"type": "string"
								},
								{
									"key": "key",
									"value": "token",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"title\":\"{{threadNameS}}\",\r\n    \"statement\":\"description of a student thread\",\r\n    \"boardId\": \"{{boardId}}\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "localhost:8081/thread/create",
							"host": [
								"localhost"
							],
							"port": "8081",
							"path": [
								"thread",
								"create"
							]
						}
					},
					"response": []
				},
				{
					"name": "create thread succsess 2",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"//Every time this creates new name for the thread\r",
									"var random = Math.random().toString(36).substring(2);\r",
									"var threadNameS2 = \"StudentThread-\" + random;\r",
									"pm.globals.set(\"threadNameS2\", threadNameS2);"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"A thread was created\", function () {\r",
									"    pm.response.to.have.status(201);\r",
									"});\r",
									"\r",
									"pm.globals.set(\"threadIdStudent2\", pm.response.text().split(\" \")[5])"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "value",
									"value": "{{token-student1}}",
									"type": "string"
								},
								{
									"key": "key",
									"value": "token",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"title\":\"{{threadNameS2}}\",\r\n    \"statement\":\"description of a student thread\",\r\n    \"boardId\": \"{{boardId}}\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "localhost:8081/thread/create",
							"host": [
								"localhost"
							],
							"port": "8081",
							"path": [
								"thread",
								"create"
							]
						}
					},
					"response": []
				},
				{
					"name": "get created threads using board id",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Threads were retrieved succsessfully\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Your test name\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData[4].title==\"threadNameS2\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "localhost:8081/thread/get/allthreads/{{boardId}}",
							"host": [
								"localhost"
							],
							"port": "8081",
							"path": [
								"thread",
								"get",
								"allthreads",
								"{{boardId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "lock thread fail ",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"A thread wasnt locked. Students cant lock threads\", function () {\r",
									"    pm.response.to.have.status(401);\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "value",
									"value": "{{token-student1}}",
									"type": "string"
								},
								{
									"key": "key",
									"value": "token",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "localhost:8081/thread/lock/{{threadIdStudent}}",
							"host": [
								"localhost"
							],
							"port": "8081",
							"path": [
								"thread",
								"lock",
								"{{threadIdStudent}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "lock thread teacher",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"    pm.expect(pm.response.text()).to.include(\"has been locked\");\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "key",
									"value": "token",
									"type": "string"
								},
								{
									"key": "value",
									"value": "{{token-teacher1}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "localhost:8081/thread/lock/{{threadIdStudent}}",
							"host": [
								"localhost"
							],
							"port": "8081",
							"path": [
								"thread",
								"lock",
								"{{threadIdStudent}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "unlock thread fail",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"A thread wasnt unlocked. Students cant unlock threads\", function () {\r",
									"    pm.response.to.have.status(401);\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "value",
									"value": "{{token-student1}}",
									"type": "string"
								},
								{
									"key": "key",
									"value": "token",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"url": {
							"raw": "localhost:8081/thread/unlock/{{threadIdStudent}}",
							"host": [
								"localhost"
							],
							"port": "8081",
							"path": [
								"thread",
								"unlock",
								"{{threadIdStudent}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "edit thread",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"A thred was successfully edited\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"has been updated\");\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "value",
									"value": "{{token-student1}}",
									"type": "string"
								},
								{
									"key": "key",
									"value": "token",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"title\":\"{{threadNameS}}\",\r\n    \"statement\":\"New description of a Student thread\",\r\n    \"boardId\":\"{{boardId}}\",\r\n    \"isLocked\":\"false\",\r\n    \"boardThreadId\":\"{{threadIdStudent}}\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "localhost:8081/thread/edit",
							"host": [
								"localhost"
							],
							"port": "8081",
							"path": [
								"thread",
								"edit"
							]
						}
					},
					"response": []
				},
				{
					"name": "check the thread was edited",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"The thread was successfully edited\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.id == pm.globals.get(\"threadIdStudent\"));\r",
									"    pm.expect(jsonData.statement == \"New description of a Student thread\");\r",
									"    pm.expect(jsonData.isLocked == true); // this wasnt chnged as you cant lock/unlock through edit\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "value",
									"value": "{{token-student1}}",
									"type": "string"
								},
								{
									"key": "key",
									"value": "token",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "localhost:8081/thread/get/{{threadIdStudent}}",
							"host": [
								"localhost"
							],
							"port": "8081",
							"path": [
								"thread",
								"get",
								"{{threadIdStudent}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "unlock thread teacher",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"    pm.expect(pm.response.text()).to.include(\"has been unlocked\");\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "key",
									"value": "token",
									"type": "string"
								},
								{
									"key": "value",
									"value": "{{token-teacher1}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "localhost:8081/thread/unlock/{{threadIdStudent}}",
							"host": [
								"localhost"
							],
							"port": "8081",
							"path": [
								"thread",
								"unlock",
								"{{threadIdStudent}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "lock board teacher",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Teacher1 locked the board\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"The board was successfully updated.\");\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "value",
									"value": "{{token-teacher1}}",
									"type": "string"
								},
								{
									"key": "key",
									"value": "user-token",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"id\":\"{{boardId}}\",\r\n    \"name\":\"{{boardName}}\",\r\n    \"description\":\"New description of a board\",\r\n    \"locked\": \"true\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "localhost:8082/board/edit/",
							"host": [
								"localhost"
							],
							"port": "8082",
							"path": [
								"board",
								"edit",
								""
							]
						}
					},
					"response": []
				}
			],
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			]
		},
		{
			"name": "Test Student Post",
			"item": [
				{
					"name": "create post fail",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"A post wasnt created.The board is locked\", function () {\r",
									"    pm.response.to.have.status(400);\r",
									"    pm.expect(pm.response.text()).to.include(\"Given board is locked\");\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "value",
									"value": "{{token-student1}}",
									"type": "string"
								},
								{
									"key": "key",
									"value": "token",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"body\":\"This is post 13\",\r\n    \"boardThreadId\":\"{{threadIdStudent2}}\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "localhost:8081/post/create",
							"host": [
								"localhost"
							],
							"port": "8081",
							"path": [
								"post",
								"create"
							]
						}
					},
					"response": []
				},
				{
					"name": "lock thread teacher",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"    pm.expect(pm.response.text()).to.include(\"has been locked\");\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "key",
									"value": "token",
									"type": "string"
								},
								{
									"key": "value",
									"value": "{{token-teacher1}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "localhost:8081/thread/lock/{{threadIdStudent2}}",
							"host": [
								"localhost"
							],
							"port": "8081",
							"path": [
								"thread",
								"lock",
								"{{threadIdStudent2}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "create post fail 2",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"A post wasnt created.Board and thread are locked\", function () {\r",
									"    pm.response.to.have.status(400);\r",
									"    pm.expect(pm.response.text()).to.include(\"Given board is locked\");\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "value",
									"value": "{{token-student1}}",
									"type": "string"
								},
								{
									"key": "key",
									"value": "token",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"body\":\"This is post 13\",\r\n    \"boardThreadId\":\"{{threadIdStudent2}}\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "localhost:8081/post/create",
							"host": [
								"localhost"
							],
							"port": "8081",
							"path": [
								"post",
								"create"
							]
						}
					},
					"response": []
				},
				{
					"name": "unlock board teacher",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Teacher1 unlocked the board\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"The board was successfully updated.\");\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "value",
									"value": "{{token-teacher1}}",
									"type": "string"
								},
								{
									"key": "key",
									"value": "user-token",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"id\":\"{{boardId}}\",\r\n    \"name\":\"{{boardName}}\",\r\n    \"description\":\"new description of a board\",\r\n    \"locked\": \"false\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "localhost:8082/board/edit/",
							"host": [
								"localhost"
							],
							"port": "8082",
							"path": [
								"board",
								"edit",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "unlock thread teacher",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"    pm.expect(pm.response.text()).to.include(\"has been unlocked\");\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "key",
									"value": "token",
									"type": "string"
								},
								{
									"key": "value",
									"value": "{{token-teacher1}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "localhost:8081/thread/unlock/{{threadIdStudent2}}",
							"host": [
								"localhost"
							],
							"port": "8081",
							"path": [
								"thread",
								"unlock",
								"{{threadIdStudent2}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "create post succsess",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"A post was created\", function () {\r",
									"    pm.response.to.have.status(201);\r",
									"});\r",
									"\r",
									"pm.globals.set(\"studentPostId\", pm.response.text().split(\" \")[5])"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"//Every time this creates new body for the post\r",
									"var random = Math.random().toString(36).substring(2);\r",
									"var postBody = \"StudentPost-\" + random;\r",
									"pm.globals.set(\"studentPost\", postBody);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "value",
									"value": "{{token-student1}}",
									"type": "string"
								},
								{
									"key": "key",
									"value": "token",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"body\":\"This is post 13\",\r\n    \"boardThreadId\":\"{{threadIdStudent2}}\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "localhost:8081/post/create",
							"host": [
								"localhost"
							],
							"port": "8081",
							"path": [
								"post",
								"create"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Test Student adds posts",
			"item": [
				{
					"name": "create post ",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"A post was created\", function () {\r",
									"    pm.response.to.have.status(201);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "value",
									"value": "{{token-student1}}",
									"type": "string"
								},
								{
									"key": "key",
									"value": "token",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"body\":\"First question\",\r\n    \"boardThreadId\":\"{{threadIdStudent2}}\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "localhost:8081/post/create",
							"host": [
								"localhost"
							],
							"port": "8081",
							"path": [
								"post",
								"create"
							]
						}
					},
					"response": []
				},
				{
					"name": "create post  ",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"A post was created\", function () {\r",
									"    pm.response.to.have.status(201);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "value",
									"value": "{{token-student1}}",
									"type": "string"
								},
								{
									"key": "key",
									"value": "token",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"body\":\"Second question\",\r\n    \"boardThreadId\":\"{{threadIdStudent2}}\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "localhost:8081/post/create",
							"host": [
								"localhost"
							],
							"port": "8081",
							"path": [
								"post",
								"create"
							]
						}
					},
					"response": []
				},
				{
					"name": "get posts by threadId student",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"The posts were retrieved successfully\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "value",
									"value": "{{token-student1}}",
									"type": "string"
								},
								{
									"key": "key",
									"value": "token",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "localhost:8081/post/get/fromthread/{{threadIdStudent2}}",
							"host": [
								"localhost"
							],
							"port": "8081",
							"path": [
								"post",
								"get",
								"fromthread",
								"{{threadIdStudent2}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "get posts by threadId teacher",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"The posts were retrieved successfully\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "value",
									"value": "{{token-teacher1}}",
									"type": "string"
								},
								{
									"key": "key",
									"value": "token",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "localhost:8081/post/get/fromthread/{{threadIdStudent2}}",
							"host": [
								"localhost"
							],
							"port": "8081",
							"path": [
								"post",
								"get",
								"fromthread",
								"{{threadIdStudent2}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "get posts by threadId unauth",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"The posts were retrieved successfully\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "value",
									"value": "null",
									"type": "string"
								},
								{
									"key": "key",
									"value": "token",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "localhost:8081/post/get/fromthread/{{threadIdStudent2}}",
							"host": [
								"localhost"
							],
							"port": "8081",
							"path": [
								"post",
								"get",
								"fromthread",
								"{{threadIdStudent2}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "get posts by threadId fail",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"There is no such thread in db\", function () {\r",
									"    pm.response.to.have.status(400);\r",
									"    pm.expect(pm.response.text()).to.include(\"Given thread could not be found\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "value",
									"value": "{{token-student1}}",
									"type": "string"
								},
								{
									"key": "key",
									"value": "token",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "localhost:8081/post/get/fromthread/10000",
							"host": [
								"localhost"
							],
							"port": "8081",
							"path": [
								"post",
								"get",
								"fromthread",
								"10000"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Tes checkEdited Posts",
			"item": [
				{
					"name": "not edited student",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Your test name\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.value == false);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "value",
									"value": "{{token-student1}}",
									"type": "string"
								},
								{
									"key": "key",
									"value": "token",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "localhost:8081/post/checkedited/{{studentPostId}}",
							"host": [
								"localhost"
							],
							"port": "8081",
							"path": [
								"post",
								"checkedited",
								"{{studentPostId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "not edited techer",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Your test name\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.value == false);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "value",
									"value": "{{token-teacher1}}",
									"type": "string"
								},
								{
									"key": "key",
									"value": "token",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "localhost:8081/post/checkedited/{{studentPostId}}",
							"host": [
								"localhost"
							],
							"port": "8081",
							"path": [
								"post",
								"checkedited",
								"{{studentPostId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "not eidited unauth",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Your test name\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.value == false);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "value",
									"value": "null",
									"type": "string"
								},
								{
									"key": "key",
									"value": "token",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "localhost:8081/post/checkedited/{{studentPostId}}",
							"host": [
								"localhost"
							],
							"port": "8081",
							"path": [
								"post",
								"checkedited",
								"{{studentPostId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "not edited fail",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"There is no such post in db\", function () {\r",
									"    pm.response.to.have.status(400);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "value",
									"value": "{{token-student1}}",
									"type": "string"
								},
								{
									"key": "key",
									"value": "token",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "localhost:8081/post/checkedited/10000",
							"host": [
								"localhost"
							],
							"port": "8081",
							"path": [
								"post",
								"checkedited",
								"10000"
							]
						}
					},
					"response": []
				},
				{
					"name": "edit post",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"The post was edited\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "value",
									"value": "{{token-student1}}",
									"type": "string"
								},
								{
									"key": "key",
									"value": "token",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"body\":\"New body\",\r\n    \"boardThreadId\":\"{{threadIdStudent2}}\",\r\n    \"postId\":\"{{studentPostId}}\"\r\n        \r\n}\r\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "localhost:8081/post/edit",
							"host": [
								"localhost"
							],
							"port": "8081",
							"path": [
								"post",
								"edit"
							]
						}
					},
					"response": []
				},
				{
					"name": "edited student ",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Your test name\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.value == true);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "value",
									"value": "{{token-student1}}",
									"type": "string"
								},
								{
									"key": "key",
									"value": "token",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "localhost:8081/post/checkedited/{{studentPostId}}",
							"host": [
								"localhost"
							],
							"port": "8081",
							"path": [
								"post",
								"checkedited",
								"{{studentPostId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "edited techer",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Your test name\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.value == true);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "value",
									"value": "{{token-teacher1}}",
									"type": "string"
								},
								{
									"key": "key",
									"value": "token",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "localhost:8081/post/checkedited/{{studentPostId}}",
							"host": [
								"localhost"
							],
							"port": "8081",
							"path": [
								"post",
								"checkedited",
								"{{studentPostId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "eidited unauth",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Your test name\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.value == true);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "value",
									"value": "null",
									"type": "string"
								},
								{
									"key": "key",
									"value": "token",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "localhost:8081/post/checkedited/{{studentPostId}}",
							"host": [
								"localhost"
							],
							"port": "8081",
							"path": [
								"post",
								"checkedited",
								"{{studentPostId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "dited fail ",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"There is no such post in db\", function () {\r",
									"    pm.response.to.have.status(400);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "value",
									"value": "{{token-student1}}",
									"type": "string"
								},
								{
									"key": "key",
									"value": "token",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "localhost:8081/post/checkedited/10000",
							"host": [
								"localhost"
							],
							"port": "8081",
							"path": [
								"post",
								"checkedited",
								"10000"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Test Teacher Tries editing Student Threads/Posts",
			"item": [],
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			]
		},
		{
			"name": "Test Log out",
			"item": [
				{
					"name": "logout teacher1",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Logged out succsessfully\", function () {\r",
									"    if(pm.response.status!=200){\r",
									"         setTimeout(() => {}, 3000);\r",
									"    }\r",
									"    pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{ \n\t\"token\":\"{{token-teacher1}}\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "localhost:8083/user/logout",
							"host": [
								"localhost"
							],
							"port": "8083",
							"path": [
								"user",
								"logout"
							]
						}
					},
					"response": []
				},
				{
					"name": "logout student1",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Logged out succsessfully\", function () {\r",
									"    if(pm.response.status!=200){\r",
									"         setTimeout(() => {}, 3000);\r",
									"    }\r",
									"    pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{ \r\n\t\"token\":\"{{token-student1}}\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "localhost:8083/user/logout",
							"host": [
								"localhost"
							],
							"port": "8083",
							"path": [
								"user",
								"logout"
							]
						}
					},
					"response": []
				},
				{
					"name": "logout teacher2",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Logged out succsessfully\", function () {\r",
									"    if(pm.response.status!=200){\r",
									"         setTimeout(() => {}, 3000);\r",
									"    }\r",
									"    pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{ \n\t\"token\":\"{{token-teacher2}}\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "localhost:8083/user/logout",
							"host": [
								"localhost"
							],
							"port": "8083",
							"path": [
								"user",
								"logout"
							]
						}
					},
					"response": []
				}
			],
			"description": "Log out Teacher1, Teacher2, Student",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			]
		}
	]
}